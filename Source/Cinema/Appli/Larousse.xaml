<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Appli"
                    xmlns:conv ="clr-namespace:Appli.Converter">

    <conv:AvisLaissesNumConverter x:Key="AvisLaissesNumConverter"/>
    <conv:VisibilityConverter x:Key="VisibilityConverter"/>
    <conv:CompositeReConverter x:Key="CompositeReConverter"/>
    <conv:ConnexionNullNameConverter x:Key="ConnexionNullNameConverter"/>
    <conv:ListeEnvieConverter x:Key="ListeEnvieConverter"/>
    <conv:ListePlateformesConverter x:Key="ListePlateformesConverter"/>
    <conv:ListeStreamingConverter x:Key="ListeStreamingConverter"/>
    <conv:MultiSizeConverter x:Key="MultiSizeConverter"/>
    <conv:NoteAvisConverter x:Key="NoteAvisConverter"/>
    <conv:PhotoConverter x:Key="PhotoConverter"/>
    <conv:PersNamesConverter x:Key="PersNamesConverter"/>
    <conv:PersonnesConverter x:Key="PersonnesConverter"/>
    <conv:SingleSizeConverter x:Key="SingleSizeConverter"/>

    <Style x:Key="TextButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="17"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="Border">
                            <ContentPresenter HorizontalAlignment="Left"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#6D0005"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#390003"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DescriptionTextButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="17"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="Border">
                            <ContentPresenter HorizontalAlignment="Left"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Canvas" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="Border">
                            <ContentPresenter HorizontalAlignment="Left"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ControlButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionButton}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <Style x:Key="AddButton" TargetType="Button" BasedOn="{StaticResource ControlButton}">
        <Setter Property="Visibility" Value="{Binding IsAdmin, Converter={StaticResource VisibilityConverter}, FallbackValue=Hidden}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0,10,0,0"/>
        <Setter Property="Content">
            <Setter.Value>
                <Viewbox>
                    <Image Source="Images/Logos/add.png"/>
                </Viewbox>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SettButton" TargetType="Button" BasedOn="{StaticResource AddButton}">
        <Setter Property="Content">
            <Setter.Value>
                <Viewbox>
                    <Image Source="Images/Logos/setting.png"/>
                </Viewbox>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CrossButton" TargetType="Button" BasedOn="{StaticResource AddButton}">
        <Setter Property="Content">
            <Setter.Value>
                <Viewbox>
                    <Image Source="Images/Logos/cross.png"/>
                </Viewbox>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AvisButton" TargetType="Button" BasedOn="{StaticResource ControlButton}">
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="Visibility" Value="{Binding Converter={StaticResource VisibilityConverter}, 
                                                                   ConverterParameter=User, FallbackValue=Hidden}"/>
        <Setter Property="Content">
            <Setter.Value>
                <Viewbox>
                    <Image Source="Images/Logos/add.png"/>
                </Viewbox>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="Titre" TargetType="TextBlock">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontFamily" Value="David"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <Style x:Key="Section" TargetType="TextBlock" BasedOn="{StaticResource Titre}">
        <Setter Property="Padding" Value="8"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
    </Style>

    <Style x:Key="Text" TargetType="TextBlock">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
        <Setter Property="LineHeight" Value="20"/>
        <Setter Property="FontFamily" Value="David"/>
        <Setter Property="FontSize" Value="16"/>
    </Style> 

    <Style x:Key="Header" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Background" Value="#262626"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="Gray" Opacity="0.3"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ValidationHeader" TargetType="TextBlock" BasedOn="{StaticResource Header}">
        <Setter Property="Width" Value="360"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style x:Key="Description" TargetType="Run">
        <Setter Property="FontWeight" Value="DemiBold"/>
    </Style>

    <Style x:Key="Content" TargetType="Run">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontStyle" Value="Italic"/>
    </Style>

    <Style x:Key="HeaderTextBox" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="15"/>
    </Style>

    <Style x:Key="ContentBis" TargetType="TextBox" BasedOn="{StaticResource HeaderTextBox}">
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <Style x:Key="ValidationBox" TargetType="TextBox" BasedOn="{StaticResource HeaderTextBox}">
        <Setter Property="Width" Value="322"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style x:Key="CommentaryTextBox" TargetType="TextBox" BasedOn="{StaticResource MahApps.Styles.TextBox}">
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="True"/>
    </Style>

    <Style x:Key="HeaderPasswordBox" TargetType="PasswordBox" BasedOn="{StaticResource MaterialDesignPasswordBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Width" Value="322"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="Cross" TargetType="Line">
        <Setter Property="StrokeThickness" Value="1"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Stroke" Value="WhiteSmoke"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Stroke" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonRectangle" TargetType="Rectangle">
        <Setter Property="Fill" Value="Transparent"/>
        <Setter Property="StrokeThickness" Value="0"/>
    </Style>

    <Style x:Key="CrossRectangle" TargetType="Rectangle" BasedOn="{StaticResource ButtonRectangle}">
        <Setter Property="Canvas.Top" Value="9.64"/>
        <Setter Property="Canvas.Left" Value="9.64"/>
        <Setter Property="Height" Value="18.72"/>
        <Setter Property="Width" Value="18.72"/>
    </Style>

    <Style x:Key="ListBox"  TargetType="ListBox" BasedOn="{StaticResource MaterialDesignListBox}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Vertical" HorizontalAlignment="Center"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MiniOeuvre" TargetType="ListBox" BasedOn="{StaticResource ListBox}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <local:MiniOeuvre Titre="{Binding Titre}"
                                      Texte="{Binding Synopsis}"
                                      Image="{Binding LienImage}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MiniActeur" TargetType="ListBox" BasedOn="{StaticResource ListBox}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <local:MiniActeur
                        Nom="{Binding Nom}"
                        Prenom="{Binding Prenom}"
                        Image="{Binding LienImage}"
                        Date="{Binding DateDeNaissance}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AvisUser" TargetType="ListBox" BasedOn="{StaticResource ListBox}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <local:AvisUser
                        Pseudo="{Binding DataContext.Pseudo, 
                        RelativeSource={RelativeSource AncestorType=UserControl}}"

                        Text="{Binding Value.Commentaire}"
                        Image="{Binding Key.LienImage}"
                        Note="{Binding Value.Note}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>